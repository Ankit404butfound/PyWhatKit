import time
import webbrowser as web
from platform import system
from typing import Optional, Union
from PIL import ImageGrab
import wikipedia
from requests import get
from bs4 import BeautifulSoup
from spotify2py import Spotify

if system().lower() in ("windows", "darwin"):

    def take_screenshot(
        file_name: str = "pywhatkit_screenshot", delay: int = 2
    ) -> None:
        """Take Screenshot of the Screen"""

        time.sleep(delay)
        screen = ImageGrab.grab()
        screen.show(title=file_name)
        screen.save(f"{file_name}.png")

def show_history() -> None:
    """Prints the Log File Generated by the Library"""

    try:
        with open("PyWhatKit_DB.txt", "r") as file:
            content = file.read()
    except FileNotFoundError:
        print("Log File does not Exist!")
    else:
        if len(content) == 0:
            print("No Logs in File!")
        else:
            print(content)

def info(topic: str, lines: int = 3, return_value: bool = False) -> Optional[str]:
    """Gives Information on the Topic"""

    data = wikipedia.summary(topic, sentences=lines)
    print(data)
    if return_value:
        return data

def playonyt(topic: str, use_api: bool = False, open_video: bool = True) -> Union[str]:
    """Play a YouTube Video"""

    if use_api:
        response = get(
            f"https://pywhatkit.herokuapp.com/playonyt?topic={topic}"
        )
        if open_video:
            web.open(response.content.decode("ascii"))
        return response.content.decode("ascii")
    else:
        url = "https://www.youtube.com/results?q=" + topic
        count = 0
        cont = get(url)
        data = cont.content
        data = str(data)
        lst = data.split('"')
        for i in lst:
            count += 1
            if i == "WEB_PAGE_TYPE_WATCH":
                break
        if lst[count - 5] == "/results":
            raise Exception("No Video Found for this Topic!")

        if open_video:
            web.open("https://www.youtube.com" + lst[count - 5])
        return "https://www.youtube.com" + lst[count - 5]

def playonSpotify(topic: str, play_track : bool = True) -> Union[str]:
    access_token = get("https://open.spotify.com/get_access_token").json()["accessToken"]
    track_url = Spotify(access_token).get_track(topic)["track_url"]
    if play_track : web.open(track_url)
    else : return track_url

def search(topic: str) -> None:
    """Searches About the Topic on Google or Brave Search."""

    user_agent = {"user-agent" : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36/10csO9CgK-99"}
    
    try : web.open(BeautifulSoup(get(f"https://search.brave.com/search?q={topic}", headers=user_agent).text, "html.parser").find("a", attrs={"class" : "result-header"}).get("href"))
    except Exception : web.open("https://www.google.com/search?q={}".format(topic))

